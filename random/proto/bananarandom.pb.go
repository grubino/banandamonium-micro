// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bananarandom.proto

/*
Package bananarandom is a generated protocol buffer package.

It is generated from these files:
	bananarandom.proto

It has these top-level messages:
	RollRequest
	Roll
	RollResponse
*/
package bananarandom

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RollRequest struct {
	GameId   int32 `protobuf:"varint,1,opt,name=gameId" json:"gameId,omitempty"`
	PlayerId int32 `protobuf:"varint,2,opt,name=playerId" json:"playerId,omitempty"`
}

func (m *RollRequest) Reset()                    { *m = RollRequest{} }
func (m *RollRequest) String() string            { return proto.CompactTextString(m) }
func (*RollRequest) ProtoMessage()               {}
func (*RollRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RollRequest) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *RollRequest) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

type Roll struct {
	Dice []int32 `protobuf:"varint,1,rep,packed,name=dice" json:"dice,omitempty"`
}

func (m *Roll) Reset()                    { *m = Roll{} }
func (m *Roll) String() string            { return proto.CompactTextString(m) }
func (*Roll) ProtoMessage()               {}
func (*Roll) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Roll) GetDice() []int32 {
	if m != nil {
		return m.Dice
	}
	return nil
}

type RollResponse struct {
	Roll *Roll `protobuf:"bytes,1,opt,name=roll" json:"roll,omitempty"`
}

func (m *RollResponse) Reset()                    { *m = RollResponse{} }
func (m *RollResponse) String() string            { return proto.CompactTextString(m) }
func (*RollResponse) ProtoMessage()               {}
func (*RollResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RollResponse) GetRoll() *Roll {
	if m != nil {
		return m.Roll
	}
	return nil
}

func init() {
	proto.RegisterType((*RollRequest)(nil), "RollRequest")
	proto.RegisterType((*Roll)(nil), "Roll")
	proto.RegisterType((*RollResponse)(nil), "RollResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for BananaRandom service

type BananaRandomClient interface {
	RollDice(ctx context.Context, in *RollRequest, opts ...client.CallOption) (*RollResponse, error)
}

type bananaRandomClient struct {
	c           client.Client
	serviceName string
}

func NewBananaRandomClient(serviceName string, c client.Client) BananaRandomClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "bananarandom"
	}
	return &bananaRandomClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *bananaRandomClient) RollDice(ctx context.Context, in *RollRequest, opts ...client.CallOption) (*RollResponse, error) {
	req := c.c.NewRequest(c.serviceName, "BananaRandom.RollDice", in)
	out := new(RollResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BananaRandom service

type BananaRandomHandler interface {
	RollDice(context.Context, *RollRequest, *RollResponse) error
}

func RegisterBananaRandomHandler(s server.Server, hdlr BananaRandomHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&BananaRandom{hdlr}, opts...))
}

type BananaRandom struct {
	BananaRandomHandler
}

func (h *BananaRandom) RollDice(ctx context.Context, in *RollRequest, out *RollResponse) error {
	return h.BananaRandomHandler.RollDice(ctx, in, out)
}

func init() { proto.RegisterFile("bananarandom.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xb1, 0xce, 0x82, 0x30,
	0x14, 0x46, 0x7f, 0x7e, 0x81, 0x90, 0x0b, 0x2e, 0x77, 0x30, 0xc8, 0x44, 0x3a, 0xc1, 0xd2, 0x01,
	0x27, 0x47, 0x8d, 0x0b, 0x6b, 0xdf, 0xa0, 0xd0, 0xc6, 0x90, 0x94, 0x16, 0x0b, 0x0e, 0xbe, 0xbd,
	0xe1, 0x6a, 0x0c, 0x5b, 0xbf, 0x9e, 0xe4, 0xe4, 0x5c, 0xc0, 0x4e, 0x5a, 0x69, 0xa5, 0x97, 0x56,
	0xb9, 0x91, 0x4f, 0xde, 0x2d, 0x8e, 0x5d, 0x20, 0x15, 0xce, 0x18, 0xa1, 0x1f, 0x4f, 0x3d, 0x2f,
	0x78, 0x80, 0xf8, 0x2e, 0x47, 0xdd, 0xaa, 0x3c, 0x28, 0x83, 0x2a, 0x12, 0xdf, 0x85, 0x05, 0x24,
	0x93, 0x91, 0x2f, 0xed, 0x5b, 0x95, 0xff, 0x13, 0xf9, 0x6d, 0x56, 0x40, 0xb8, 0x2a, 0x10, 0x21,
	0x54, 0x43, 0xaf, 0xf3, 0xa0, 0xdc, 0x55, 0x91, 0xa0, 0x37, 0xab, 0x21, 0xfb, 0xe8, 0xe7, 0xc9,
	0xd9, 0x59, 0xe3, 0x11, 0x42, 0xef, 0x8c, 0x21, 0x7b, 0xda, 0x44, 0x9c, 0x20, 0x7d, 0x35, 0x67,
	0xc8, 0xae, 0xd4, 0x27, 0xa8, 0x0f, 0x6b, 0x48, 0x56, 0x7a, 0x1b, 0x7a, 0x8d, 0x19, 0xdf, 0x44,
	0x16, 0x7b, 0xbe, 0x75, 0xb2, 0xbf, 0x2e, 0xa6, 0x5b, 0x4e, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x4d, 0xa6, 0x6a, 0xc7, 0xe1, 0x00, 0x00, 0x00,
}
